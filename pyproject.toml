[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "echoloc-nn"
version = "0.1.0"
description = "End-to-end ultrasonic localization toolkit with CNN-Transformer hybrids"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@example.com"}
]
keywords = ["ultrasonic", "localization", "deep-learning", "pytorch", "echolocation"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "soundfile>=0.10.0",
    "PyYAML>=6.0"
]

[project.optional-dependencies]
hardware = [
    "pyserial>=3.5",
    "RPi.GPIO>=0.7.0; platform_machine == 'armv7l'",
    "adafruit-circuitpython-bundle"
]
viz = [
    "plotly>=5.0.0",
    "dash>=2.0.0",
    "opencv-python>=4.5.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0"
]

[project.urls]
Homepage = "https://github.com/yourusername/echoloc-nn"
Repository = "https://github.com/yourusername/echoloc-nn.git"
Documentation = "https://echoloc-nn.readthedocs.io"
"Bug Tracker" = "https://github.com/yourusername/echoloc-nn/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["echoloc_nn*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=echoloc_nn"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests requiring hardware"
]

[tool.coverage.run]
source = ["echoloc_nn"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]